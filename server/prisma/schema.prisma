// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ACLTypes {
  admin
  friend
  public
}

model User {
  id              Int        @id @default(autoincrement())
  acl             ACLTypes   @default(public)
  email           String     @unique
  normalizedEmail String     @unique @map("normalized_email")
  username        String     @unique
  password        String
  tags            Json[]
  createdAt       DateTime   @default(now()) @map("created_at") @db.Timestamptz
  updatedAt       DateTime   @updatedAt @map("updated_at") @db.Timestamptz
  posts           Post[]
  categories      Category[]
}

model Blog {
  id         Int        @id @default(autoincrement())
  title      String
  subtitle   String
  bio        String
  categories Category[]
  createdAt  DateTime   @default(now()) @map("created_at") @db.Timestamptz
  updatedAt  DateTime   @updatedAt @map("updated_at") @db.Timestamptz
}

model Post {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @map("user_id")
  title      String
  subtitle   String?
  body       String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int      @map("category_id")
  tags       String[]
  public     Boolean  @default(false)
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt  DateTime @updatedAt @map("updated_at") @db.Timestamptz
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  posts     Post[]
  Blog      Blog     @relation(fields: [blogId], references: [id])
  blogId    Int      @map("blog_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz
}
